import { BROWSER_EVENTS } from '../../events';
import { createAction } from "@reduxjs/toolkit";
import { DownloadStatus } from '../../models/store';
import { Page } from '../../models';

export const ACTIONS = {
  [BROWSER_EVENTS.CLIENT_FILE_UPDATE]: createAction<ClientFileUpdatePayload, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_FILE_UPDATE),
  [BROWSER_EVENTS.CLIENT_FILE_UPDATE_LOADING]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_FILE_UPDATE_LOADING),
  [BROWSER_EVENTS.CLIENT_FILE_UPDATE_CLEAR]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_FILE_UPDATE_CLEAR),
  [BROWSER_EVENTS.CLIENT_FILE_UPDATE_SUCCESS]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_FILE_UPDATE_SUCCESS),
  [BROWSER_EVENTS.CLIENT_FILE_UPDATE_FAIL]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_FILE_UPDATE_FAIL),
  [BROWSER_EVENTS.APP_DOWNLOAD]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.APP_DOWNLOAD),
  [BROWSER_EVENTS.APP_DOWNLOAD_STATUS]: createAction<DownloadStatus, BROWSER_EVENTS>(BROWSER_EVENTS.APP_DOWNLOAD_STATUS),
  [BROWSER_EVENTS.APP_DOWNLOAD_PROGRESS]: createAction<number, BROWSER_EVENTS>(BROWSER_EVENTS.APP_DOWNLOAD_PROGRESS),
  [BROWSER_EVENTS.APP_DOWNLOAD_SUCCESS]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.APP_DOWNLOAD_SUCCESS),
  [BROWSER_EVENTS.APP_DOWNLOAD_FAIL]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.APP_DOWNLOAD_FAIL),
  [BROWSER_EVENTS.CLIENT_CATALOG]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_CATALOG),
  [BROWSER_EVENTS.CLIENT_CATALOG_SUCCESS]: createAction<Page[], BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_CATALOG_SUCCESS),
  [BROWSER_EVENTS.CLIENT_CATALOG_FAIL]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_CATALOG_FAIL),
  [BROWSER_EVENTS.PDF_GENERATE]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.PDF_GENERATE),
  [BROWSER_EVENTS.PDF_GENERATE_SUCCESS]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.PDF_GENERATE_SUCCESS),
  [BROWSER_EVENTS.PDF_GENERATE_FAIL]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.PDF_GENERATE_FAIL),
  [BROWSER_EVENTS.CLIENT_CATALOG_UPDATE]: createAction<ClientFileUpdatePayload[], BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_CATALOG_UPDATE),
  [BROWSER_EVENTS.CLIENT_CATALOG_UPDATE_SUCCESS]: createAction<void, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_CATALOG_UPDATE_SUCCESS),
  [BROWSER_EVENTS.CLIENT_CATALOG_UPDATE_FAIL]: createAction<string, BROWSER_EVENTS>(BROWSER_EVENTS.CLIENT_CATALOG_UPDATE_FAIL),
}

export type ClientFileUpdatePayload = {
  type: 'upload' | 'remove',
  fileId: string;
}
